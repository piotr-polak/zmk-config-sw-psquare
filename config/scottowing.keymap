#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define MAC 0
#define MAC_CODE 1
#define MAC_NUMBER 2
#define MAC_FUNCTION 3
#define WINDOWS 4
#define WINDOWS_CODE 5
#define WINDOWS_NUMBER 6
#define WINDOWS_FUNCTION 7

// Home row mods macro
//#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4

#define HRML(k1,k2,k3,k4) &ht LGUI k1  &ht LALT k2  &ht LCTRL k3  &ht LSHFT k4
#define HRMR(k1,k2,k3,k4) &ht RSHFT k1  &ht RCTRL k2  &ht RALT k3  &ht RGUI k4

//#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

#define DEF 0
#define NAV 1
#define SYM 2
#define NUM 3
#define MED 4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;

            // keys: R U

            key-positions = <2 3>;
            bindings = <&kp ESC>;
        };

        combo_minus {
            timeout-ms = <50>;

            // keys: T Y

            key-positions = <4 5>;
            bindings = <&kp MINUS>;
        };

        combo_delete {
            timeout-ms = <50>;

            // keys: V M

            key-positions = <6 7>;
            bindings = <&kp DEL>;
        };

        combo_backspace {
            timeout-ms = <50>;

            // keys: V M

            key-positions = <26 27>;
            bindings = <&kp BSPC>;
        };

        combo_under {
            timeout-ms = <50>;

            // keys: B N

            key-positions = <24 25>;
            bindings = <&kp UNDER>;
        };

        combo_capsw {
            timeout-ms = <50>;

            // keys: E I

            key-positions = <2 7>;
            bindings = <&caps_word>;
        };

        conbo_tab {
            bindings = <&kp TAB>;
            key-positions = <22 23>;
        };
    };

    //    conditional_layers {
    //        compatible = "zmk,conditional-layers";
    //        tri_layer {
    //            if-layers = <1 2 3>;
    //            then-layer = <3>;
    //        };
    //    };

    macros {
        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp T &kp R &kp S &kp H &kp O &kp P &kp P &kp I &kp N &kp G &kp AT &kp P &kp R &kp O &kp T &kp O &kp N &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&none  &kp Q           &kp W           &kp E        &kp R             &kp T      &kp Y        &kp U              &kp I            &kp O              &kp P                &none
&none  &kp A           &kp S           &kp D        &kp F             &kp G      &kp H        &kp J              &kp K            &kp L              &kp BSPC             &none
&none  &mt Z LEFT_GUI  &mt X LEFT_ALT  &mt C LCTRL  &mt V LEFT_SHIFT  &kp B      &kp N        &mt M RIGHT_SHIFT  &mt COMMA RCTRL  &mt DOT RIGHT_ALT  &mt SLASH RIGHT_GUI  &none
                                                    &lt 1 SPACE       &lt 4 TAB  &lt 2 ENTER  &lt 3 BACKSPACE
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans          &trans           &kp CARET       &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans  &trans  &trans  &trans          &trans           &kp LEFT_ARROW  &kp DOWN        &kp UP           &kp RIGHT_ARROW       &kp DOLLAR             &trans
&trans  &trans  &trans  &trans  &kp LEFT_SHIFT  &kp PRINTSCREEN  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP      &kp END               &kp INS                &trans
                                &trans          &trans           &trans          &trans
            >;
        };

        symbols {
            bindings = <
&trans  &kp EXCL   &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp ASTERISK  &kp CAPS  &kp BSPC   &trans
&trans  &kp N1     &kp N2  &kp N3    &kp N4    &kp N5     &kp N6     &kp N7    &kp N8        &kp N9    &kp N0     &trans
&trans  &kp LSHFT  &none   &none     &none     &mo 3      &none      &none     &kp COMMA     &kp DOT   &kp RSHFT  &trans
                                     &trans    &trans     &trans     &trans
            >;
        };

        numbers {
            bindings = <
&trans  &kp EQUAL     &kp N7        &kp N8        &kp N9        &kp NUMBER_0  &kp UNDERSCORE  &kp F9              &kp F10  &kp F11  &kp F12  &trans
&trans  &kp ASTERISK  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS      &kp COMMA       &kp F5              &kp F6   &kp F7   &kp F8   &trans
&trans  &kp SLASH     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS     &kp PERIOD      &mt RIGHT_SHIFT F1  &kp F2   &kp F3   &kp F4   &trans
                                                  &trans        &trans        &trans          &trans
            >;
        };

        media {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp CAPS   &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp K      &kp L    &kp BSPC  &kp ENTER
&kp LSHFT  &none  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA  &kp DOT  &none     &kp RSHFT
                                &none  &none  &none  &none
            >;
        };
    };
};
